package com.y9vad9.restaurant.domain.system.strings;

import com.y9vad9.restaurant.domain.system.types.Contacts;
import com.y9vad9.restaurant.domain.system.types.Range;
import com.y9vad9.restaurant.domain.system.types.Schedule;
import com.y9vad9.restaurant.domain.tables.types.Table;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Locale;
import java.util.stream.Collectors;

public final class UkrainianStrings implements Strings {
    public static UkrainianStrings INSTANCE = new UkrainianStrings();

    @Override
    public Locale getLocale() {
        return Locale.of("uk", "UA");
    }

    @Override
    public String getLanguageDisplayTitle() {
        return "üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞";
    }

    @Override
    public String getUnknownCommandMessage() {
        return "–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞.";
    }

    @Override
    public String getHelloMessage() {
        return "–í—ñ—Ç–∞—î–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—ñ –Ω–∞—à–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É! –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ " +
            "—Ç—É—Ç —Å—Ç—ñ–ª –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –≤–∞–º —á–∞—Å, –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å –≤–∞—à—ñ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ–ª–∏ –º–∏ –ø—Ä–∞—Ü—é—î–º–æ.";
    }

    @Override
    public String getMainMenuMessage() {
        return "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:";
    }

    @Override
    public String getInvalidInputMessage() {
        return "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ.";
    }

    @Override
    public String getBookTableTitle() {
        return "üìù –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ —Å—Ç–æ–ª–∏–∫";
    }

    @Override
    public String getBookedTablesTitle() {
        return "‚úÖ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω—ñ —Å—Ç–æ–ª–∏–∫–∏";
    }

    @Override
    public String getWhenWeWorkTitle() {
        return "üïë –ö–æ–ª–∏ –º–∏ –ø—Ä–∞—Ü—é—î–º–æ?";
    }

    @Override
    public String getContactsTitle() {
        return "‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è";
    }

    @Override
    public String getWhenWeWorkMessage(Schedule schedule) {
        return "–ú–∏ –ø—Ä–∞—Ü—é—î–º–æ –∑–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –≥—Ä–∞—Ñ—ñ–∫–æ–º:\n" +
            " ‚Ä¢ –ü–æ–Ω–µ–¥—ñ–ª–æ–∫: " + ((schedule.monday() == null || schedule.monday().isEmpty()) ? "–ó–∞—á–∏–Ω–µ–Ω–æ" : schedule.monday()) + "\n" +
            " ‚Ä¢ –í—ñ–≤—Ç–æ—Ä–æ–∫: " + ((schedule.tuesday() == null || schedule.tuesday().isEmpty()) ? "–ó–∞—á–∏–Ω–µ–Ω–æ" : schedule.tuesday()) + "\n" +
            " ‚Ä¢ –°–µ—Ä–µ–¥–∞: " + ((schedule.wednesday() == null || schedule.wednesday().isEmpty()) ? "–ó–∞—á–∏–Ω–µ–Ω–æ" : schedule.wednesday()) + "\n" +
            " ‚Ä¢ –ß–µ—Ç–≤–µ—Ä: " + ((schedule.thursday() == null || schedule.thursday().isEmpty()) ? "–ó–∞—á–∏–Ω–µ–Ω–æ" : schedule.thursday()) + "\n" +
            " ‚Ä¢ –ü'—è—Ç–Ω–∏—Ü—è: " + ((schedule.friday() == null || schedule.friday().isEmpty()) ? "–ó–∞—á–∏–Ω–µ–Ω–æ" : schedule.friday()) + "\n" +
            " ‚Ä¢ –°—É–±–æ—Ç–∞: " + ((schedule.saturday() == null || schedule.saturday().isEmpty()) ? "–ó–∞—á–∏–Ω–µ–Ω–æ" : schedule.saturday()) + "\n" +
            " ‚Ä¢ –ù–µ–¥—ñ–ª—è: " + ((schedule.sunday() == null || schedule.sunday().isEmpty()) ? "–ó–∞—á–∏–Ω–µ–Ω–æ" : schedule.sunday()) + "\n";
    }

    @Override
    public String getContactsMessage(Contacts contacts) {
        StringBuilder builder = new StringBuilder()
            .append("<b>–ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ:</b>")
            .append("\n");

        switch (contacts.phoneNumbers().size()) {
            case 0:
                break;
            case 1:
                builder.append("    ‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ").append(contacts.phoneNumbers().getFirst()).append("\n");
                break;
            default:
                String numbers = String.join(", ", contacts.phoneNumbers());
                builder.append("    ‚Ä¢ –ù–æ–º–µ—Ä–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É: ").append(numbers).append("\n");
                break;
        }

        switch (contacts.emailAddresses().size()) {
            case 0:
                break;
            case 1:
                builder.append("    ‚Ä¢ –ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞: ").append(contacts.emailAddresses().getFirst()).append("\n");
                break;
            default:
                String addresses = String.join(", ", contacts.emailAddresses());
                builder.append("    ‚Ä¢ –ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ñ –∞–¥—Ä–µ—Å–∏: ").append(addresses).append("\n");
                break;
        }

        builder.append("    ‚Ä¢ –ê–¥—Ä–µ—Å–∞: ").append(contacts.address());
        return builder.toString();
    }

    @SuppressWarnings("OptionalGetWithoutIsPresent")
    @Override
    public String getBookedTablesMessage(List<Table> tables) {
        if (tables.isEmpty())
            return "–í–∏ —â–µ –Ω–µ –∑–∞—Ä–µ–∑–µ—Ä–≤—É–≤–∞–ª–∏ –Ω—ñ –æ–¥–Ω–æ–≥–æ —Å—Ç–æ–ª–∏–∫—É.";

        return "–í–∞—à—ñ –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω—ñ —Å—Ç–æ–ª–∏–∫–∏:\n\n" +
            tables.stream()
                .map(table -> {
                    final var reservation = table.reservation().get();
                    final var reservationTime = reservation.reservationTime();

                    return "<b> ‚Ä¢ –°—Ç–æ–ª–∏–∫ ‚Ññ" + table.number() + "</b>" +
                        "\n     –ù–æ–º–µ—Ä –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è: " + reservation.id() +
                        "\n     –ù–∞ —ñ–º'—è: " + reservation.fullName() +
                        "\n     –ì–æ—Å—Ç–µ–π: " + table.seats() +
                        "\n     –ß–∞—Å: " + reservationTime.first().toLocalTime().toString() + " ‚Äì " + reservationTime.last().toLocalTime() +
                        "\n     –î–∞—Ç–∞: " + reservationTime.first().toLocalDate().format(DateTimeFormatter.ofPattern("dd.MM.yyyy"));
                })
                .collect(Collectors.joining("\n"));
    }

    @Override
    public String getWriteNameForBookingMessage() {
        return "–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º'—è —Ç–æ–≥–æ, –Ω–∞ –∫–æ–≥–æ –±—É–¥–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è:";
    }

    @Override
    public String getWriteNumberOfPeopleForTableMessage() {
        return "–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—é–¥–µ–π, —è–∫–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–ª—è —Å—Ç–æ–ª–∏–∫—É:";
    }

    @Override
    public String getUnableToProceedCountOfPeopleMessage(int max) {
        return "–ù–∞–∂–∞–ª—å, –º–∏ –Ω–µ –º–∞—î–º–æ –ø—ñ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç–æ–ª–∏–∫—ñ–≤ –¥–ª—è —Ç–∞–∫–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ª—é–¥–µ–π, " +
            "—Å–ø—Ä–æ–±—É–π—Ç–µ –∑–∞—Ä–µ–∑–µ—Ä–≤—É–≤–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞. –ú–∞–∫—Å–∏–º—É–º: " + max + ".";
    }

    @Override
    public String getWriteDateOfEntryMessage() {
        return "–ù–∞–ø–∏—à—ñ—Ç—å –¥–∞—Ç—É, –Ω–∞ —è–∫—É —Ö–æ—á–µ—Ç–µ –≤–∑—è—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è:";
    }

    @Override
    public String getWriteEnterTimeMessage() {
        return "–û–±–µ—Ä—ñ—Ç—å —á–∞—Å –Ω–∞ —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –∑–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ (–∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–º—ñ–∂ —á–∞—Å—É –∑–∞ –ø—Ä–∏–∫–ª–∞–¥–æ–º –≥–æ–¥:—Ö–≤ ‚Äì –≥–æ–¥:—Ö–≤):";
    }

    @Override
    public String getWriteLeaveTimeMessage() {
        return "–í–≤–µ–¥—ñ—Ç—å —á–∞—Å, –∫–æ–ª–∏ –±–∞–∂–∞—î—Ç–µ –∑–∞–∫—ñ–Ω—á–∏—Ç–∏ (–≤ 24-–≥–æ–¥–∏–Ω–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ –∑–∞ –ø—Ä–∏–∫–ª–∞–¥–æ–º: –≥–æ–¥–∏–Ω–∞:—Ö–≤–∏–ª–∏–Ω–∞):";
    }

    @Override
    public String getSuccessfulBookingMessage(Table table) {
        Table.Reservation reservation = table.reservation().orElseThrow();
        Range<LocalDateTime> reservationTime = reservation.reservationTime();
        return "–£—Å–ø—ñ—à–Ω–æ –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–æ! –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è:\n" +
            "   ‚Ä¢ –ù–æ–º–µ—Ä –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è: " + reservation.id() + ".\n" +
            "   ‚Ä¢ –ù–æ–º–µ—Ä —Å—Ç–æ–ª–∏–∫—É: " + table.number() + ".\n" +
            "   ‚Ä¢ –Ü–º'—è: " + reservation.fullName() + ".\n" +
            "   ‚Ä¢ –ß–∞—Å: " + reservationTime.first().toLocalTime().toString() + " ‚Äì " + reservationTime.last().toLocalTime() + ".\n" +
            "   ‚Ä¢ –î–∞—Ç–∞: " + reservationTime.first().toLocalDate().format(DateTimeFormatter.ofPattern("dd.MM.yyyy")) + ".";
    }

    @Override
    public String getNoTablesAvailableMessage() {
        return "–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Å—Ç–æ–ª–∏–∫—ñ–≤";
    }

    @Override
    public String getWeDontWorkAtGivenDay() {
        return "–ù–∞–∂–∞–ª—å, –≤ —Ü–µ–π –¥–µ–Ω—å –º–∏ –Ω–µ –ø—Ä–∞—Ü—é—î–º–æ ‚òπÔ∏è";
    }

    @Override
    public String getCancelTitle() {
        return "üîô –°–∫–∞—Å—É–≤–∞—Ç–∏";
    }

    @Override
    public String getNoAvailableDays() {
        return "–ù–∞–∂–∞–ª—å –Ω–µ–º–∞—î –≤—ñ–ª—å–Ω–∏—Ö –¥–∞—Ç –¥–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è ‚òπÔ∏è";
    }

    @Override
    public String getReservationsListAdmin() {
        return "–ü–æ–∫–∞–∑–∞—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –≥–æ—Å—Ç–µ–π";
    }

    @Override
    public String getAdminHelloMessage() {
        return "–í—ñ—Ç–∞—î–º–æ –≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫—ñ–π –ø–∞–Ω–µ–ª—ñ. –¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è" +
            " –≥–æ—Å—Ç–µ–π —Ç–∞ —Å–∞–º–æ—Ä—É—á–Ω–æ –±—Ä–æ–Ω—é–≤–∞—Ç–∏, —è–∫—â–æ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω.";
    }

    @Override
    public String getTodayTitle() {
        return "–°—å–æ–≥–æ–¥–Ω—ñ";
    }

    @Override
    public String getSelectDateMessage() {
        return "–û–±–µ—Ä—ñ—Ç—å –¥–∞—Ç—É:";
    }

    @SuppressWarnings("OptionalGetWithoutIsPresent")
    @Override
    public String getReservationsListAdminMessage(List<Table> tables) {
        if (tables.isEmpty())
            return "–ù–µ –±—É–ª–æ –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–æ –Ω—ñ –æ–¥–Ω–æ–≥–æ —Å—Ç–æ–ª–∏–∫—É –∑–∞ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥.";

        return "–ó–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω—ñ —Å—Ç–æ–ª–∏–∫–∏:\n\n" +
            tables.stream()
                .map(table -> {
                    final var reservation = table.reservation().get();
                    final var reservationTime = reservation.reservationTime();

                    return "<b> ‚Ä¢ –°—Ç–æ–ª–∏–∫ ‚Ññ" + table.number() + "</b>" +
                        "\n     –ù–æ–º–µ—Ä –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è: " + reservation.id() +
                        "\n     –ù–∞ —ñ–º'—è: " + reservation.fullName() +
                        "\n     –ì–æ—Å—Ç–µ–π: " + table.seats() +
                        "\n     –ß–∞—Å: " + reservationTime.first().toLocalTime().toString() + " ‚Äì " + reservationTime.last().toLocalTime() +
                        "\n     –î–∞—Ç–∞: " + reservationTime.first().toLocalDate().format(DateTimeFormatter.ofPattern("dd.MM.yyyy"));
                })
                .collect(Collectors.joining("\n")) +
            "\n\n–í—ñ–¥–º—ñ–Ω–∏—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –º–æ–∂–Ω–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ /cancel [—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä] [–ø—Ä–∏—á–∏–Ω–∞]. " +
            "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ü–µ –±—É–¥–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≥–æ—Å—Ç—é.";
    }

    @Override
    public String getReservationCanceledRegular() {
        return "–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ!";
    }

    @Override
    public String getReservationCanceled(Table.Reservation reservation, String reason) {
        return "–ù–∞–∂–∞–ª—å, –≤–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ: " + reason + ".";
    }

    @Override
    public String getChooseLanguageMessage() {
        return "–û–±–µ—Ä—ñ—Ç—å –±—É–¥—å-–ª–∞—Å–∫–∞ –º–æ–≤—É:";
    }
}
